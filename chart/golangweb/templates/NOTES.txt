Golang Web can be accessed via port {{ .Values.config.port }} on the following DNS name from within your cluster:

{{- if contains "NodePort" .Values.service.type }}
Golang Web can be accessed via:
- export WEB_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "web.fullname" . }})
- export WEB_HOST=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
- echo "http://$WEB_HOST:$WEB_PORT"

{{- else if contains "LoadBalancer" .Values.service.type }}
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "web.fullname" . }}'
Golang Web can be accessed via:
- export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "web.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
- echo $SERVICE_IP
{{- else if contains "ClusterIP" .Values.service.type }}
Golang Web can be accessed via:
- Within your cluster:
- {{ template "web.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
- Or use `kubectl` proxy
- kubectl port-forward --namespace {{ .Release.Namespace }} $(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "web.fullname" . }}" -o jsonpath="{.items[0].metadata.name}") 9042:{{ .Values.config.port }}
  echo 127.0.0.1 9042
{{- end }}

If `external-dns` is enabled, you can access the service via:
- http://{{- template "web.domain" . -}}